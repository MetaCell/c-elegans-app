{
  "openapi": "3.1.0",
  "info": {
    "title": "C. Elegans Visualizer",
    "version": "1.0.0",
    "description": ""
  },
  "paths": {
    "/api/datasets": {
      "get": {
        "operationId": "get_all_datasets",
        "summary": "Get All Datasets",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Dataset"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Returns all the datasets from the DB",
        "tags": [
          "datasets"
        ]
      }
    },
    "/api/datasets/{dataset}": {
      "get": {
        "operationId": "get_dataset",
        "summary": "Get Dataset",
        "parameters": [
          {
            "in": "path",
            "name": "dataset",
            "schema": {
              "title": "Dataset",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "description": "Returns a specific dataset",
        "tags": [
          "datasets"
        ]
      }
    },
    "/api/datasets/{dataset}/neurons": {
      "get": {
        "operationId": "get_dataset_neurons",
        "summary": "Get Dataset Neurons",
        "parameters": [
          {
            "in": "path",
            "name": "dataset",
            "schema": {
              "title": "Dataset",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Neuron"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "description": "Returns all the neurons of a dedicated dataset",
        "tags": [
          "datasets"
        ]
      }
    },
    "/api/cells": {
      "get": {
        "operationId": "get_all_cells",
        "summary": "Get All Cells",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "minimum": 1,
              "title": "Page",
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedNeuron"
                }
              }
            }
          }
        },
        "description": "Returns all the cells (neurons) from the DB",
        "tags": [
          "neurons"
        ]
      }
    },
    "/api/live": {
      "get": {
        "operationId": "live",
        "summary": "Live",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Test if application is healthy",
        "tags": [
          "healthcheck"
        ]
      }
    },
    "/api/ping": {
      "get": {
        "operationId": "ping",
        "summary": "Ping",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "test the application is up",
        "tags": [
          "healthcheck"
        ]
      }
    },
    "/api/ready": {
      "get": {
        "operationId": "ready",
        "summary": "Ready",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Test if application is ready to take requests",
        "tags": [
          "healthcheck"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Dataset": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "maxLength": 20,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "collection": {
            "maxLength": 20,
            "title": "Collection",
            "type": "string"
          },
          "name": {
            "maxLength": 50,
            "title": "Name",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "time": {
            "title": "Time",
            "type": "number"
          },
          "visualTime": {
            "title": "Visual Time",
            "type": "number"
          },
          "type": {
            "maxLength": 50,
            "title": "Type",
            "type": "string"
          },
          "axes": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Axes"
          }
        },
        "required": [
          "collection",
          "name",
          "description",
          "time",
          "visualTime",
          "type"
        ],
        "title": "Dataset",
        "type": "object"
      },
      "ErrorMessage": {
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "string"
          }
        },
        "required": [
          "detail"
        ],
        "title": "ErrorMessage",
        "type": "object"
      },
      "Neuron": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "maxLength": 30,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "nclass": {
            "maxLength": 30,
            "title": "Nclass",
            "type": "string"
          },
          "neurotransmitter": {
            "maxLength": 10,
            "title": "Neurotransmitter",
            "type": "string"
          },
          "type": {
            "maxLength": 10,
            "title": "Type",
            "type": "string"
          },
          "embryonic": {
            "default": false,
            "title": "Embryonic",
            "type": "boolean"
          },
          "inhead": {
            "default": false,
            "title": "Inhead",
            "type": "boolean"
          },
          "intail": {
            "default": false,
            "title": "Intail",
            "type": "boolean"
          }
        },
        "required": [
          "nclass",
          "neurotransmitter",
          "type"
        ],
        "title": "Neuron",
        "type": "object"
      },
      "Input": {
        "properties": {
          "page": {
            "default": 1,
            "minimum": 1,
            "title": "Page",
            "type": "integer"
          }
        },
        "title": "Input",
        "type": "object"
      },
      "PagedNeuron": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Neuron"
            },
            "title": "Items",
            "type": "array"
          },
          "count": {
            "title": "Count",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "count"
        ],
        "title": "PagedNeuron",
        "type": "object"
      }
    }
  },
  "servers": []
}