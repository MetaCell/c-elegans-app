# Generated by Django 5.0.3 on 2024-04-20 01:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Annotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pre", models.CharField(db_index=True, max_length=30)),
                ("post", models.CharField(db_index=True, max_length=30)),
                ("type", models.CharField(db_index=True, max_length=20)),
                ("collection", models.CharField(db_index=True, max_length=20)),
                ("annotation", models.CharField(db_index=True, max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="Connection",
            fields=[
                (
                    "id",
                    models.PositiveIntegerField(
                        db_index=True, primary_key=True, serialize=False
                    ),
                ),
                ("pre", models.CharField(db_index=True, max_length=30)),
                ("post", models.CharField(db_index=True, max_length=30)),
                ("type", models.CharField(db_index=True, max_length=20)),
                ("synapses", models.PositiveSmallIntegerField(db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_index=True, max_length=20, primary_key=True, serialize=False
                    ),
                ),
                ("collection", models.CharField(db_index=True, max_length=20)),
                ("type", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField()),
                ("time", models.FloatField()),
                ("visual_time", models.FloatField()),
                ("axes", models.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Neuron",
            fields=[
                (
                    "name",
                    models.CharField(max_length=30, primary_key=True, serialize=False),
                ),
                ("nclass", models.CharField(max_length=30)),
                ("neurotransmitter", models.CharField(max_length=10)),
                ("type", models.CharField(max_length=10)),
                ("embryonic", models.BooleanField(default=False)),
                ("inhead", models.BooleanField(default=False)),
                ("intail", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Synapse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("connector_id", models.PositiveIntegerField(db_index=True)),
                ("weight", models.PositiveIntegerField(db_index=True)),
                ("pre_tid", models.PositiveIntegerField(db_index=True)),
                ("post_tid", models.PositiveIntegerField(db_index=True)),
            ],
        ),
        migrations.AddConstraint(
            model_name="annotation",
            constraint=models.UniqueConstraint(
                fields=("pre", "post", "type", "collection", "annotation"),
                name="pk_annotations",
            ),
        ),
        migrations.AddField(
            model_name="connection",
            name="dataset",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="connections",
                to="api.dataset",
            ),
        ),
        migrations.AddField(
            model_name="synapse",
            name="connection",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.connection"
            ),
        ),
        migrations.AddConstraint(
            model_name="connection",
            constraint=models.UniqueConstraint(
                fields=("dataset", "pre", "post", "type"), name="pk_connections"
            ),
        ),
        migrations.AddConstraint(
            model_name="synapse",
            constraint=models.UniqueConstraint(
                fields=("connection", "connector_id", "weight", "pre_tid", "post_tid"),
                name="unique_synapse",
            ),
        ),
    ]
